#pragma once

#include <opencv2/opencv.hpp>
#include <vector>
#include <string>

namespace fe {
	/*
	 * »нтерфейс обработчика смежных областей.
	 */
	class IBlobProcessor
	{
	public:
		/**
		 * Ќайти смежные области на изображении. —ветлые области представл¤ют собой фон, тЄмные области объекты.
		 * @param image - изображение дл¤ поиска смежных областей, должно иметь тип CV_8UC1.
		 * @return неотмасштабированные смежные области, представл¤ют собой белые символы на чЄрном фоне, тип CV_8UC1.
		 */
		virtual std::vector<cv::Mat> DetectBlobs(cv::Mat image) = 0;

		/**
		 * ѕривести размер смежных областей к единому масштабу.
		 * @param blobs - смежные области, должны представл¤ть собой белые символы на чЄрном фоне, тип CV_8UC1.
		 * @param normilized_blobs - буфер дл¤ записи смежных областей единого размера.
		 *               —межные области после записи представл¤ют собой белые буквы на чЄрном фоне, тип CV_8UC1.
		 * @param side - сторона квадрата на котором будет отрисована нормализованна¤ смежна¤ область.
		 */
		virtual std::vector<cv::Mat> NormalizeBlobs(
			std::vector<cv::Mat> & blobs,
			int side
		) = 0;

		/**
		 * ѕолучить описание используемого обработчика смежных областей.
		 * @return описание, содержит название метода выделени¤ смежных областей и фамилию разработчика.
		 */
		virtual std::string GetType() = 0;
	};
};